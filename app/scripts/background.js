const defaults = {
    caseSensitive: false,
    collapseBooleanAttributes: false,
    collapseInlineTagWhitespace: false,
    collapseWhitespace: true,
    conservativeCollapse: false,
    continueOnParseError: false,
    decodeEntities: false,
    html5: false,
    includeAutoGeneratedTags: false,
    keepClosingSlash: false,
    maxLineLength: false,
    minifyCSS: true,
    minifyJS: true,
    preserveLineBreaks: true,
    preventAttributesEscaping: false,
    processConditionalComments: true,
    quoteCharacter: false,
    removeAttributeQuotes: false,
    removeComments: true,
    removeEmptyAttributes: false,
    removeEmptyElements: false,
    removeOptionalTags: false,
    removeScriptTypeAttributes: false,
    removeStyleLinkTypeAttributes: false,
    removeTagWhitespace: false,
    sortAttributes: false,
    sortClassName: false,
    trimCustomFragments: false,
    useShortDoctype: false
};

browser.contextMenus.create({
    "title" : "Minify the selected HTML codes",
    "type"  : "normal",
    "contexts" : ["selection"],
    "onclick" : copytext()
});

function copytext(info, tab){
    return function(info, tab){
        saveToClipboard();
    }
}

async function saveToClipboard() {
    const tabId = browser.tabs.getCurrent().id;
    let target = "failed", selected = "", results, code;
    try {
        code = "typeof window.minify === 'function';";
        results = await browser.tabs.executeScript(tabId, {code});
        
        if (!results || results[0] !== true) {
            const file = 'scripts/htmlminifier.js';
            await browser.tabs.executeScript(tabId, {file});
        }

        code = `window.getSelection().toString();`;
        results = await browser.tabs.executeScript(tabId, {code});
        selected = results[0];
        
        results = await browser.storage.sync.get(defaults);

        let params = "{";
        for(const label of Object.keys(results)) {
            params += "\""+label+"\":"+results[label].toString()+",";
        }
        params += "}";
        selected = selected.replace(/\`/mg, "\\`");
        code = "window.minify(`"+selected+"`,"+params+");"
        results = await browser.tabs.executeScript(tabId, {code});
        
        if (results && results[0] && results[0] !== true) {
            target = results[0];
        }
        execCommandCopy(target);
        code = "alert(\"done\");";
        browser.tabs.executeScript(tabId, {code});
    } catch(error) {
        console.error('Failed to copy text: ' + error);
        execCommandCopy(target);
        code = "alert(\""+target+"\");";
        browser.tabs.executeScript(tabId, {code});
    }
}

function execCommandCopy(text) {
    const textArea = document.createElement("textarea");
    textArea.value = text;
    document.body.appendChild(textArea);
    textArea.select();
    document.execCommand("copy");
    document.body.removeChild(textArea);
}
